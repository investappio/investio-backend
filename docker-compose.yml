version: "3.8"

services:
  backend:
    image: node:lts
    container_name: backend
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - "PORT=${PORT}"
      - "NODE_ENV=development"
      - "MONGO_HOSTNAME=${MONGO_HOSTNAME}"
      - "MONGO_DATABASE=${MONGO_DATABASE}"
      - "MONGO_USERNAME=${MONGO_USERNAME}"
      - "MONGO_PASSWORD=${MONGO_PASSWORD}"
      - "REDIS_PASSWORD=${REDIS_PASSWORD}"
      - "JWT_SECRET=${JWT_SECRET}"
      - "APCA_API_KEY_ID=${APCA_API_KEY_ID}"
      - "APCA_API_SECRET_KEY=${APCA_API_SECRET_KEY}"
    working_dir: /home/node/app
    volumes:
      - ./src:/home/node/app/src
      - ./package.json:/home/node/app/package.json
    command: /bin/sh -c "npm i && npm start"
    ports:
      - "${PORT}:${PORT}"
    expose:
      - "${PORT}"
  stocks:
    build: ./scripts
    container_name: stocks
    restart: on-failure:1
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: /bin/sh -c "python3 get_stocks.py && tail -f /dev/null"
    working_dir: /usr/src/app
    volumes:
      - ./scripts:/usr/src/app
    environment:
      - "MONGO_HOSTNAME=${MONGO_HOSTNAME}"
      - "MONGO_DATABASE=${MONGO_DATABASE}"
      - "MONGO_USERNAME=${MONGO_USERNAME}"
      - "MONGO_PASSWORD=${MONGO_PASSWORD}"
      - "APCA_API_KEY_ID=${APCA_API_KEY_ID}"
      - "APCA_API_SECRET_KEY=${APCA_API_SECRET_KEY}"
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.stocks.container: "stocks"
      ofelia.job-exec.stocks.schedule: "0 15 4 * * *"
      ofelia.job-exec.stocks.command: "python3 get_stocks.py"
  redis:
    image: redis:latest
    container_name: redis
    command: --loglevel warning --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a '${REDIS_PASSWORD}' ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 6379:6379
    environment:
      - "REDIS_PASSWORD=${REDIS_PASSWORD}"
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.stats().ok' | mongo admin -u ${MONGO_USERNAME} -p '${MONGO_PASSWORD}' --quiet"]
      interval: 5s
      timeout: 5s
      retries: 10
    command: [--auth]
    ports:
      - 27017:27017
    volumes:
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
  ofelia:
    image: mcuadros/ofelia:latest
    container_name: ofelia
    restart: unless-stopped
    depends_on:
      stocks:
        condition: service_started
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
